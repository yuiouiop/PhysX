# Makefile generated by XPJ for linux32
-include Makefile.custom
ProjectName = RenderDebug
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/ClientServer.cpp
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/FileRenderDebug.cpp
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/Hull2MeshEdges.cpp
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/InternalRenderDebug.cpp
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/ProcessRenderDebug.cpp
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/PsCommLayer.cpp
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/PsCommStream.cpp
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/RenderDebug.cpp
RenderDebug_cppfiles   += ./../../shared/general/RenderDebug/src/RenderDebugDLLMain.cpp

RenderDebug_cpp_debug_dep    = $(addprefix $(DEPSDIR)/RenderDebug/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(RenderDebug_cppfiles)))))
RenderDebug_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(RenderDebug_ccfiles)))))
RenderDebug_c_debug_dep      = $(addprefix $(DEPSDIR)/RenderDebug/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(RenderDebug_cfiles)))))
RenderDebug_debug_dep      = $(RenderDebug_cpp_debug_dep) $(RenderDebug_cc_debug_dep) $(RenderDebug_c_debug_dep)
-include $(RenderDebug_debug_dep)
RenderDebug_cpp_release_dep    = $(addprefix $(DEPSDIR)/RenderDebug/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(RenderDebug_cppfiles)))))
RenderDebug_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(RenderDebug_ccfiles)))))
RenderDebug_c_release_dep      = $(addprefix $(DEPSDIR)/RenderDebug/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(RenderDebug_cfiles)))))
RenderDebug_release_dep      = $(RenderDebug_cpp_release_dep) $(RenderDebug_cc_release_dep) $(RenderDebug_c_release_dep)
-include $(RenderDebug_release_dep)
RenderDebug_cpp_profile_dep    = $(addprefix $(DEPSDIR)/RenderDebug/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(RenderDebug_cppfiles)))))
RenderDebug_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(RenderDebug_ccfiles)))))
RenderDebug_c_profile_dep      = $(addprefix $(DEPSDIR)/RenderDebug/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(RenderDebug_cfiles)))))
RenderDebug_profile_dep      = $(RenderDebug_cpp_profile_dep) $(RenderDebug_cc_profile_dep) $(RenderDebug_c_profile_dep)
-include $(RenderDebug_profile_dep)
RenderDebug_cpp_checked_dep    = $(addprefix $(DEPSDIR)/RenderDebug/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(RenderDebug_cppfiles)))))
RenderDebug_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(RenderDebug_ccfiles)))))
RenderDebug_c_checked_dep      = $(addprefix $(DEPSDIR)/RenderDebug/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(RenderDebug_cfiles)))))
RenderDebug_checked_dep      = $(RenderDebug_cpp_checked_dep) $(RenderDebug_cc_checked_dep) $(RenderDebug_c_checked_dep)
-include $(RenderDebug_checked_dep)
RenderDebug_debug_hpaths    := 
RenderDebug_debug_hpaths    += ./../../shared/general/RenderDebug/include
RenderDebug_debug_hpaths    += ./../../shared/general/RenderDebug/public
RenderDebug_debug_hpaths    += ./../../../PxShared/include
RenderDebug_debug_hpaths    += ./../../../PxShared/include/filebuf
RenderDebug_debug_hpaths    += ./../../../PxShared/include/foundation
RenderDebug_debug_hpaths    += ./../../../PxShared/include/task
RenderDebug_debug_hpaths    += ./../../../PxShared/include/cudamanager
RenderDebug_debug_hpaths    += ./../../../PxShared/include/pvd
RenderDebug_debug_hpaths    += ./../../../PxShared/src/foundation/include
RenderDebug_debug_hpaths    += ./../../../PxShared/src/filebuf/include
RenderDebug_debug_hpaths    += ./../../../PxShared/src/fastxml/include
RenderDebug_debug_hpaths    += ./../../../PxShared/src/pvd/include
RenderDebug_debug_hpaths    += ./../../shared/general/shared
RenderDebug_debug_hpaths    += ./../../public
RenderDebug_debug_lpaths    := 
RenderDebug_debug_lpaths    += ./../../../PxShared/lib/makelinux32
RenderDebug_debug_defines   := $(RenderDebug_custom_defines)
RenderDebug_debug_defines   += PX_FOUNDATION_DLL=0
RenderDebug_debug_defines   += _DEBUG
RenderDebug_debug_defines   += PX_DEBUG
RenderDebug_debug_defines   += PX_CHECKED
RenderDebug_debug_libraries := 
RenderDebug_debug_common_cflags	:= $(RenderDebug_custom_cflags)
RenderDebug_debug_common_cflags    += -MMD
RenderDebug_debug_common_cflags    += $(addprefix -D, $(RenderDebug_debug_defines))
RenderDebug_debug_common_cflags    += $(addprefix -I, $(RenderDebug_debug_hpaths))
RenderDebug_debug_common_cflags  += -m32
RenderDebug_debug_common_cflags  += -m32 -msse2 -mfpmath=sse -malign-double -fpic -ffast-math -fno-exceptions -fno-rtti -Wno-invalid-offsetof -Wno-unknown-pragmas -std=c++0x
RenderDebug_debug_common_cflags  += -g3 -gdwarf-2
RenderDebug_debug_cflags	:= $(RenderDebug_debug_common_cflags)
RenderDebug_debug_cppflags	:= $(RenderDebug_debug_common_cflags)
RenderDebug_debug_lflags    := $(RenderDebug_custom_lflags)
RenderDebug_debug_lflags    += $(addprefix -L, $(RenderDebug_debug_lpaths))
RenderDebug_debug_lflags    += -Wl,--start-group $(addprefix -l, $(RenderDebug_debug_libraries)) -Wl,--end-group
RenderDebug_debug_lflags  += -lrt -pthread -z muldefs -Wl,-rpath=.
RenderDebug_debug_lflags  += -m32
RenderDebug_debug_objsdir  = $(OBJS_DIR)/RenderDebug_debug
RenderDebug_debug_cpp_o    = $(addprefix $(RenderDebug_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(RenderDebug_cppfiles)))))
RenderDebug_debug_cc_o    = $(addprefix $(RenderDebug_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(RenderDebug_ccfiles)))))
RenderDebug_debug_c_o      = $(addprefix $(RenderDebug_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(RenderDebug_cfiles)))))
RenderDebug_debug_obj      = $(RenderDebug_debug_cpp_o) $(RenderDebug_debug_cc_o) $(RenderDebug_debug_c_o)
RenderDebug_debug_bin      := ./../../shared/general/RenderDebug/lib/linux32/libRenderDebugDEBUG.a

clean_RenderDebug_debug: 
	@$(ECHO) clean RenderDebug debug
	@$(RMDIR) $(RenderDebug_debug_objsdir)
	@$(RMDIR) $(RenderDebug_debug_bin)
	@$(RMDIR) $(DEPSDIR)/RenderDebug/debug

build_RenderDebug_debug: postbuild_RenderDebug_debug
postbuild_RenderDebug_debug: mainbuild_RenderDebug_debug
mainbuild_RenderDebug_debug: prebuild_RenderDebug_debug $(RenderDebug_debug_bin)
prebuild_RenderDebug_debug:

$(RenderDebug_debug_bin): $(RenderDebug_debug_obj) 
	mkdir -p `dirname ./../../shared/general/RenderDebug/lib/linux32/libRenderDebugDEBUG.a`
	@$(AR) rcs $(RenderDebug_debug_bin) $(RenderDebug_debug_obj)
	$(ECHO) building $@ complete!

RenderDebug_debug_DEPDIR = $(dir $(@))/$(*F)
$(RenderDebug_debug_cpp_o): $(RenderDebug_debug_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(RenderDebug_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/RenderDebug/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cppfiles))))))
	cp $(RenderDebug_debug_DEPDIR).d $(addprefix $(DEPSDIR)/RenderDebug/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/RenderDebug/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cppfiles))))).P; \
	  rm -f $(RenderDebug_debug_DEPDIR).d

$(RenderDebug_debug_cc_o): $(RenderDebug_debug_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(RenderDebug_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_ccfiles))))))
	cp $(RenderDebug_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_ccfiles))))).debug.P; \
	  rm -f $(RenderDebug_debug_DEPDIR).d

$(RenderDebug_debug_c_o): $(RenderDebug_debug_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(RenderDebug_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/RenderDebug/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cfiles))))))
	cp $(RenderDebug_debug_DEPDIR).d $(addprefix $(DEPSDIR)/RenderDebug/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/RenderDebug/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_debug_objsdir),, $@))), $(RenderDebug_cfiles))))).P; \
	  rm -f $(RenderDebug_debug_DEPDIR).d

RenderDebug_release_hpaths    := 
RenderDebug_release_hpaths    += ./../../shared/general/RenderDebug/include
RenderDebug_release_hpaths    += ./../../shared/general/RenderDebug/public
RenderDebug_release_hpaths    += ./../../../PxShared/include
RenderDebug_release_hpaths    += ./../../../PxShared/include/filebuf
RenderDebug_release_hpaths    += ./../../../PxShared/include/foundation
RenderDebug_release_hpaths    += ./../../../PxShared/include/task
RenderDebug_release_hpaths    += ./../../../PxShared/include/cudamanager
RenderDebug_release_hpaths    += ./../../../PxShared/include/pvd
RenderDebug_release_hpaths    += ./../../../PxShared/src/foundation/include
RenderDebug_release_hpaths    += ./../../../PxShared/src/filebuf/include
RenderDebug_release_hpaths    += ./../../../PxShared/src/fastxml/include
RenderDebug_release_hpaths    += ./../../../PxShared/src/pvd/include
RenderDebug_release_hpaths    += ./../../shared/general/shared
RenderDebug_release_hpaths    += ./../../public
RenderDebug_release_lpaths    := 
RenderDebug_release_lpaths    += ./../../../PxShared/lib/makelinux32
RenderDebug_release_defines   := $(RenderDebug_custom_defines)
RenderDebug_release_defines   += PX_FOUNDATION_DLL=0
RenderDebug_release_defines   += NDEBUG
RenderDebug_release_defines   += APEX_SHIPPING
RenderDebug_release_libraries := 
RenderDebug_release_common_cflags	:= $(RenderDebug_custom_cflags)
RenderDebug_release_common_cflags    += -MMD
RenderDebug_release_common_cflags    += $(addprefix -D, $(RenderDebug_release_defines))
RenderDebug_release_common_cflags    += $(addprefix -I, $(RenderDebug_release_hpaths))
RenderDebug_release_common_cflags  += -m32
RenderDebug_release_common_cflags  += -m32 -msse2 -mfpmath=sse -malign-double -fpic -ffast-math -fno-exceptions -fno-rtti -Wno-invalid-offsetof -Wno-unknown-pragmas -std=c++0x
RenderDebug_release_common_cflags  += -O3 -fno-strict-aliasing
RenderDebug_release_cflags	:= $(RenderDebug_release_common_cflags)
RenderDebug_release_cppflags	:= $(RenderDebug_release_common_cflags)
RenderDebug_release_lflags    := $(RenderDebug_custom_lflags)
RenderDebug_release_lflags    += $(addprefix -L, $(RenderDebug_release_lpaths))
RenderDebug_release_lflags    += -Wl,--start-group $(addprefix -l, $(RenderDebug_release_libraries)) -Wl,--end-group
RenderDebug_release_lflags  += -lrt -pthread -z muldefs -Wl,-rpath=.
RenderDebug_release_lflags  += -m32
RenderDebug_release_objsdir  = $(OBJS_DIR)/RenderDebug_release
RenderDebug_release_cpp_o    = $(addprefix $(RenderDebug_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(RenderDebug_cppfiles)))))
RenderDebug_release_cc_o    = $(addprefix $(RenderDebug_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(RenderDebug_ccfiles)))))
RenderDebug_release_c_o      = $(addprefix $(RenderDebug_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(RenderDebug_cfiles)))))
RenderDebug_release_obj      = $(RenderDebug_release_cpp_o) $(RenderDebug_release_cc_o) $(RenderDebug_release_c_o)
RenderDebug_release_bin      := ./../../shared/general/RenderDebug/lib/linux32/libRenderDebug.a

clean_RenderDebug_release: 
	@$(ECHO) clean RenderDebug release
	@$(RMDIR) $(RenderDebug_release_objsdir)
	@$(RMDIR) $(RenderDebug_release_bin)
	@$(RMDIR) $(DEPSDIR)/RenderDebug/release

build_RenderDebug_release: postbuild_RenderDebug_release
postbuild_RenderDebug_release: mainbuild_RenderDebug_release
mainbuild_RenderDebug_release: prebuild_RenderDebug_release $(RenderDebug_release_bin)
prebuild_RenderDebug_release:

$(RenderDebug_release_bin): $(RenderDebug_release_obj) 
	mkdir -p `dirname ./../../shared/general/RenderDebug/lib/linux32/libRenderDebug.a`
	@$(AR) rcs $(RenderDebug_release_bin) $(RenderDebug_release_obj)
	$(ECHO) building $@ complete!

RenderDebug_release_DEPDIR = $(dir $(@))/$(*F)
$(RenderDebug_release_cpp_o): $(RenderDebug_release_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(RenderDebug_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/RenderDebug/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cppfiles))))))
	cp $(RenderDebug_release_DEPDIR).d $(addprefix $(DEPSDIR)/RenderDebug/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/RenderDebug/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cppfiles))))).P; \
	  rm -f $(RenderDebug_release_DEPDIR).d

$(RenderDebug_release_cc_o): $(RenderDebug_release_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(RenderDebug_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_ccfiles))))))
	cp $(RenderDebug_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_ccfiles))))).release.P; \
	  rm -f $(RenderDebug_release_DEPDIR).d

$(RenderDebug_release_c_o): $(RenderDebug_release_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(RenderDebug_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/RenderDebug/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cfiles))))))
	cp $(RenderDebug_release_DEPDIR).d $(addprefix $(DEPSDIR)/RenderDebug/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/RenderDebug/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_release_objsdir),, $@))), $(RenderDebug_cfiles))))).P; \
	  rm -f $(RenderDebug_release_DEPDIR).d

RenderDebug_profile_hpaths    := 
RenderDebug_profile_hpaths    += ./../../shared/general/RenderDebug/include
RenderDebug_profile_hpaths    += ./../../shared/general/RenderDebug/public
RenderDebug_profile_hpaths    += ./../../../PxShared/include
RenderDebug_profile_hpaths    += ./../../../PxShared/include/filebuf
RenderDebug_profile_hpaths    += ./../../../PxShared/include/foundation
RenderDebug_profile_hpaths    += ./../../../PxShared/include/task
RenderDebug_profile_hpaths    += ./../../../PxShared/include/cudamanager
RenderDebug_profile_hpaths    += ./../../../PxShared/include/pvd
RenderDebug_profile_hpaths    += ./../../../PxShared/src/foundation/include
RenderDebug_profile_hpaths    += ./../../../PxShared/src/filebuf/include
RenderDebug_profile_hpaths    += ./../../../PxShared/src/fastxml/include
RenderDebug_profile_hpaths    += ./../../../PxShared/src/pvd/include
RenderDebug_profile_hpaths    += ./../../shared/general/shared
RenderDebug_profile_hpaths    += ./../../public
RenderDebug_profile_lpaths    := 
RenderDebug_profile_lpaths    += ./../../../PxShared/lib/makelinux32
RenderDebug_profile_defines   := $(RenderDebug_custom_defines)
RenderDebug_profile_defines   += PX_FOUNDATION_DLL=0
RenderDebug_profile_defines   += NDEBUG
RenderDebug_profile_defines   += PX_PROFILE
RenderDebug_profile_libraries := 
RenderDebug_profile_common_cflags	:= $(RenderDebug_custom_cflags)
RenderDebug_profile_common_cflags    += -MMD
RenderDebug_profile_common_cflags    += $(addprefix -D, $(RenderDebug_profile_defines))
RenderDebug_profile_common_cflags    += $(addprefix -I, $(RenderDebug_profile_hpaths))
RenderDebug_profile_common_cflags  += -m32
RenderDebug_profile_common_cflags  += -m32 -msse2 -mfpmath=sse -malign-double -fpic -ffast-math -fno-exceptions -fno-rtti -Wno-invalid-offsetof -Wno-unknown-pragmas -std=c++0x
RenderDebug_profile_common_cflags  += -O3 -fno-strict-aliasing
RenderDebug_profile_cflags	:= $(RenderDebug_profile_common_cflags)
RenderDebug_profile_cppflags	:= $(RenderDebug_profile_common_cflags)
RenderDebug_profile_lflags    := $(RenderDebug_custom_lflags)
RenderDebug_profile_lflags    += $(addprefix -L, $(RenderDebug_profile_lpaths))
RenderDebug_profile_lflags    += -Wl,--start-group $(addprefix -l, $(RenderDebug_profile_libraries)) -Wl,--end-group
RenderDebug_profile_lflags  += -lrt -pthread -z muldefs -Wl,-rpath=.
RenderDebug_profile_lflags  += -m32
RenderDebug_profile_objsdir  = $(OBJS_DIR)/RenderDebug_profile
RenderDebug_profile_cpp_o    = $(addprefix $(RenderDebug_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(RenderDebug_cppfiles)))))
RenderDebug_profile_cc_o    = $(addprefix $(RenderDebug_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(RenderDebug_ccfiles)))))
RenderDebug_profile_c_o      = $(addprefix $(RenderDebug_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(RenderDebug_cfiles)))))
RenderDebug_profile_obj      = $(RenderDebug_profile_cpp_o) $(RenderDebug_profile_cc_o) $(RenderDebug_profile_c_o)
RenderDebug_profile_bin      := ./../../shared/general/RenderDebug/lib/linux32/libRenderDebugPROFILE.a

clean_RenderDebug_profile: 
	@$(ECHO) clean RenderDebug profile
	@$(RMDIR) $(RenderDebug_profile_objsdir)
	@$(RMDIR) $(RenderDebug_profile_bin)
	@$(RMDIR) $(DEPSDIR)/RenderDebug/profile

build_RenderDebug_profile: postbuild_RenderDebug_profile
postbuild_RenderDebug_profile: mainbuild_RenderDebug_profile
mainbuild_RenderDebug_profile: prebuild_RenderDebug_profile $(RenderDebug_profile_bin)
prebuild_RenderDebug_profile:

$(RenderDebug_profile_bin): $(RenderDebug_profile_obj) 
	mkdir -p `dirname ./../../shared/general/RenderDebug/lib/linux32/libRenderDebugPROFILE.a`
	@$(AR) rcs $(RenderDebug_profile_bin) $(RenderDebug_profile_obj)
	$(ECHO) building $@ complete!

RenderDebug_profile_DEPDIR = $(dir $(@))/$(*F)
$(RenderDebug_profile_cpp_o): $(RenderDebug_profile_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(RenderDebug_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/RenderDebug/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cppfiles))))))
	cp $(RenderDebug_profile_DEPDIR).d $(addprefix $(DEPSDIR)/RenderDebug/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/RenderDebug/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cppfiles))))).P; \
	  rm -f $(RenderDebug_profile_DEPDIR).d

$(RenderDebug_profile_cc_o): $(RenderDebug_profile_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(RenderDebug_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_ccfiles))))))
	cp $(RenderDebug_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_ccfiles))))).profile.P; \
	  rm -f $(RenderDebug_profile_DEPDIR).d

$(RenderDebug_profile_c_o): $(RenderDebug_profile_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(RenderDebug_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/RenderDebug/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cfiles))))))
	cp $(RenderDebug_profile_DEPDIR).d $(addprefix $(DEPSDIR)/RenderDebug/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/RenderDebug/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_profile_objsdir),, $@))), $(RenderDebug_cfiles))))).P; \
	  rm -f $(RenderDebug_profile_DEPDIR).d

RenderDebug_checked_hpaths    := 
RenderDebug_checked_hpaths    += ./../../shared/general/RenderDebug/include
RenderDebug_checked_hpaths    += ./../../shared/general/RenderDebug/public
RenderDebug_checked_hpaths    += ./../../../PxShared/include
RenderDebug_checked_hpaths    += ./../../../PxShared/include/filebuf
RenderDebug_checked_hpaths    += ./../../../PxShared/include/foundation
RenderDebug_checked_hpaths    += ./../../../PxShared/include/task
RenderDebug_checked_hpaths    += ./../../../PxShared/include/cudamanager
RenderDebug_checked_hpaths    += ./../../../PxShared/include/pvd
RenderDebug_checked_hpaths    += ./../../../PxShared/src/foundation/include
RenderDebug_checked_hpaths    += ./../../../PxShared/src/filebuf/include
RenderDebug_checked_hpaths    += ./../../../PxShared/src/fastxml/include
RenderDebug_checked_hpaths    += ./../../../PxShared/src/pvd/include
RenderDebug_checked_hpaths    += ./../../shared/general/shared
RenderDebug_checked_hpaths    += ./../../public
RenderDebug_checked_lpaths    := 
RenderDebug_checked_lpaths    += ./../../../PxShared/lib/makelinux32
RenderDebug_checked_defines   := $(RenderDebug_custom_defines)
RenderDebug_checked_defines   += PX_FOUNDATION_DLL=0
RenderDebug_checked_defines   += NDEBUG
RenderDebug_checked_defines   += PX_CHECKED
RenderDebug_checked_defines   += PX_ENABLE_CHECKED_ASSERTS
RenderDebug_checked_libraries := 
RenderDebug_checked_common_cflags	:= $(RenderDebug_custom_cflags)
RenderDebug_checked_common_cflags    += -MMD
RenderDebug_checked_common_cflags    += $(addprefix -D, $(RenderDebug_checked_defines))
RenderDebug_checked_common_cflags    += $(addprefix -I, $(RenderDebug_checked_hpaths))
RenderDebug_checked_common_cflags  += -m32
RenderDebug_checked_common_cflags  += -m32 -msse2 -mfpmath=sse -malign-double -fpic -ffast-math -fno-exceptions -fno-rtti -Wno-invalid-offsetof -Wno-unknown-pragmas -std=c++0x
RenderDebug_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
RenderDebug_checked_cflags	:= $(RenderDebug_checked_common_cflags)
RenderDebug_checked_cppflags	:= $(RenderDebug_checked_common_cflags)
RenderDebug_checked_lflags    := $(RenderDebug_custom_lflags)
RenderDebug_checked_lflags    += $(addprefix -L, $(RenderDebug_checked_lpaths))
RenderDebug_checked_lflags    += -Wl,--start-group $(addprefix -l, $(RenderDebug_checked_libraries)) -Wl,--end-group
RenderDebug_checked_lflags  += -lrt -pthread -z muldefs -Wl,-rpath=.
RenderDebug_checked_lflags  += -m32
RenderDebug_checked_objsdir  = $(OBJS_DIR)/RenderDebug_checked
RenderDebug_checked_cpp_o    = $(addprefix $(RenderDebug_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(RenderDebug_cppfiles)))))
RenderDebug_checked_cc_o    = $(addprefix $(RenderDebug_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(RenderDebug_ccfiles)))))
RenderDebug_checked_c_o      = $(addprefix $(RenderDebug_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(RenderDebug_cfiles)))))
RenderDebug_checked_obj      = $(RenderDebug_checked_cpp_o) $(RenderDebug_checked_cc_o) $(RenderDebug_checked_c_o)
RenderDebug_checked_bin      := ./../../shared/general/RenderDebug/lib/linux32/libRenderDebugCHECKED.a

clean_RenderDebug_checked: 
	@$(ECHO) clean RenderDebug checked
	@$(RMDIR) $(RenderDebug_checked_objsdir)
	@$(RMDIR) $(RenderDebug_checked_bin)
	@$(RMDIR) $(DEPSDIR)/RenderDebug/checked

build_RenderDebug_checked: postbuild_RenderDebug_checked
postbuild_RenderDebug_checked: mainbuild_RenderDebug_checked
mainbuild_RenderDebug_checked: prebuild_RenderDebug_checked $(RenderDebug_checked_bin)
prebuild_RenderDebug_checked:

$(RenderDebug_checked_bin): $(RenderDebug_checked_obj) 
	mkdir -p `dirname ./../../shared/general/RenderDebug/lib/linux32/libRenderDebugCHECKED.a`
	@$(AR) rcs $(RenderDebug_checked_bin) $(RenderDebug_checked_obj)
	$(ECHO) building $@ complete!

RenderDebug_checked_DEPDIR = $(dir $(@))/$(*F)
$(RenderDebug_checked_cpp_o): $(RenderDebug_checked_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(RenderDebug_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/RenderDebug/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cppfiles))))))
	cp $(RenderDebug_checked_DEPDIR).d $(addprefix $(DEPSDIR)/RenderDebug/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/RenderDebug/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cppfiles))))).P; \
	  rm -f $(RenderDebug_checked_DEPDIR).d

$(RenderDebug_checked_cc_o): $(RenderDebug_checked_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(RenderDebug_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_ccfiles))))))
	cp $(RenderDebug_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_ccfiles))))).checked.P; \
	  rm -f $(RenderDebug_checked_DEPDIR).d

$(RenderDebug_checked_c_o): $(RenderDebug_checked_objsdir)/%.o:
	$(ECHO) RenderDebug: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(RenderDebug_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/RenderDebug/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cfiles))))))
	cp $(RenderDebug_checked_DEPDIR).d $(addprefix $(DEPSDIR)/RenderDebug/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(RenderDebug_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/RenderDebug/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(RenderDebug_checked_objsdir),, $@))), $(RenderDebug_cfiles))))).P; \
	  rm -f $(RenderDebug_checked_DEPDIR).d

clean_RenderDebug:  clean_RenderDebug_debug clean_RenderDebug_release clean_RenderDebug_profile clean_RenderDebug_checked
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
